[
    {
        "caption": "git: diff current file inline",
        "command": "gs_inline_diff"
    },
    {
        "caption": "git: diff current file inline (cached)",
        "command": "gs_inline_diff",
        "args": { "cached": true }
    },
    {
        "caption": "git: quick stage",
        "command": "gs_quick_stage"
    },
    {
        "caption": "git: quick commit",
        "command": "gs_quick_commit"
    },
    {
        "caption": "git: quick stage current file and commit",
        "command": "gs_quick_stage_current_file_commit"
    },
    {
        "caption": "git: status",
        "command": "gs_show_status"
    },
    {
        "caption": "git: commit",
        "command": "gs_commit"
    },
    {
        "caption": "git: commit including unstaged files",
        "command": "gs_commit",
        "args": { "include_unstaged": true }
    },
    {
        "caption": "git: amend previous commit",
        "command": "gs_commit",
        "args": { "amend": true }
    },
    {
        "caption": "git: open an issue in browser",
        "command": "gs_open_github_issue"
    },
    {
        "caption": "git: graph",
        "command": "gs_log_graph"
    },
    {
        "caption": "github: open file on remote",
        "command": "gs_open_file_on_remote",
        "args": { "preselect": true }
    },
    {
        "caption": "github: set remote for integration",
        "command": "gs_configure_github_remote"
    },
    {
        "caption": "git: checkout",
        "command": "gs_checkout_branch"
    },
    {
        "caption": "git: checkout new branch",
        "command": "gs_checkout_new_branch"
    },
    {
        "caption": "git: checkout remote branch as local",
        "command": "gs_checkout_remote_branch"
    },
    {
        "caption": "git: checkout current file",
        "command": "gs_checkout_current_file"
    },
    {
        "caption": "git: fetch",
        "command": "gs_fetch"
    },
    {
        "caption": "git: pull",
        "command": "gs_pull"
    },
    {
        "caption": "git: push",
        "command": "gs_push"
    },
    {
        "caption": "git: push (force)",
        "command": "gs_push",
        "args": { "force": true }
    },
    {
        "caption": "git: push to existing branch",
        "command": "gs_push_to_branch"
    },
    {
        "caption": "git: push to branch name",
        "command": "gs_push_to_branch_name"
    },
    {
        "caption": "git: ignore current file",
        "command": "gs_ignore"
    },
    {
        "caption": "git: ignore pattern",
        "command": "gs_ignore_pattern"
    },
    {
        "caption": "git: assume file unchanged",
        "command": "gs_assume_unchanged"
    },
    {
        "caption": "git: restore file assumed unchanged",
        "command": "gs_restore_assumed_unchanged"
    },
    {
        "caption": "git: init",
        "command": "gs_init"
    },
    {
        "caption": "git: diff",
        "command": "gs_diff"
    },
    {
        "caption": "git: diff cached",
        "command": "gs_diff",
        "args": { "in_cached_mode": true }
    },
    {
        "caption": "git: diff current file",
        "command": "gs_diff",
        "args": { "current_file": true }
    },
    {
        "caption": "git: diff current file (cached)",
        "command": "gs_diff",
        "args": { "in_cached_mode": true, "current_file": true }
    },
    {
        "caption": "git: blame current file",
        "command": "gs_blame"
    },
    {
        "caption": "GitSavvy: reload modules (debug)",
        "command": "gs_reload_modules_debug"
    },
    {
        "caption": "git: log",
        "command": "gs_log"
    },
    {
        "caption": "git: log current file",
        "command": "gs_log_current_file"
    },
    {
        "caption": "git: log by author",
        "command": "gs_log_by_author"
    },
    {
        "caption": "git: merge",
        "command": "gs_merge"
    },
    {
        "caption": "git: abort merge",
        "command": "gs_abort_merge"
    },
    {
        "caption": "git: restart merge for file...",
        "command": "gs_restart_merge_for_file"
    },
    {
        "caption": "GitSavvy: help",
        "command": "gs_help"
    },
    {
        "caption": "git: generate changelog",
        "command": "gs_generate_change_log"
    },
    {
        "caption": "GitSavvy: start logging",
        "command": "gs_start_logging"
    },
    {
        "caption": "GitSavvy: stop logging",
        "command": "gs_stop_logging"
    },
    {
        "caption": "GitSavvy: view recorded log",
        "command": "gs_view_git_log"
    },
    {
        "caption": "git: tags",
        "command": "gs_show_tags"
    },
    {
        "caption": "git: quick tag",
        "command": "gs_tag_create"
    },
    {
        "caption": "git: branch",
        "command": "gs_show_branch"
    }
]
