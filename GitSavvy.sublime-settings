{
    /*
        Change this to `false` if you don't wish to be prompted when
        discarding files.
     */
    "prompt_before_destructive_action": true,

    /*
        Uncomment the setting below to explicitly set which git binary
        to use.  An empty string will search PATH for "git".  The setting may
        be a direct string to a git binary, e.g.:

            "git_path": "/usr/bin/git",

        Or it may be a dictionary keyed off what sublime.platform() returns,
        so it may be customized on a per-platform basis.  e.g.:

            "git_path": {
                "default": "",
                "windows": "C:/Program Files/Git/cmd/git.exe"
            },
     */
    "git_path": "",

    /*
        Change this to `true` when doing dev work on GitSavvy.
     */
    "dev_mode": false,

    /*
        Enter your github API key in the field below.  To interact with
        a GitHub Enterprise instance, add a field with the FQDN as the key
        and the API key as the value.
     */
    "api_tokens": {
        // "github.com": "ADD YOUR TOKEN HERE"
    },

    /*
        Change this to `true` to display a diff for the current commit
        when writing a commit message.
     */
    "show_commit_diff": false,

    /*
        Change this to `true` to scroll to the first hunk automatically when
        you open the inline-diff view.
     */
    "inline_diff_auto_scroll": false,

    "colors": {
        /*
            Colors used by the inline-diff view to display changes.
         */
        "inline_diff": {
            "add_foreground": "#F9F9F4",
            "add_background": "#37A832",
            "add_foreground_bold": "#F9F9F4",
            "add_background_bold": "#287020",
            "remove_foreground": "#F9F9F4",
            "remove_background": "#A83732",
            "remove_foreground_bold": "#F9F9F4",
            "remove_background_bold": "#702820"
        }
    },

    /*
        Change this to `true` when you would like inline diff to
        ignore EOL whitespace changes.
        See details in https://github.com/divmain/GitSavvy/issues/177
     */
    "inline_diff_ignore_eol_whitespaces": false,

    /*
        Add entries to this array (e.g. "pull" or "push") if you'd like the
        output of these Git commands to always be shown in a panel.
     */
    "show_panel_for": [],

    /*
        Add entries to this array (e.g. "pull" or "push") if you'd like any
        open panel to be closed at the beginning of the operation.
     */
    "close_panel_for": [],

    /*
        Use the Sublime configured syntax for COMMIT_EDITMSG rather than
        the custom bundled syntax that comes with GitSavvy.
    */

    "use_syntax_for_commit_editmsg": false,

    /*
        Change this to `false` to suppress the input in the panel output.
     */
    "show_input_in_output": true,

    /*
        Change this to `false` to suppress Git status in ST3 status bar.
     */
    "git_status_in_status_bar": true,

    /*
        When entering a tag message, this will be used if the message is empty.
        The replacement value "{tag_name}" is optional, but recommended.
     */
    "default_tag_message": "Tag {tag_name}",

    /*
        The filename for extra customized info to be displayed after the default
        COMMIT_HELP_TEXT, such as commit message rules/tips/conventions.
        Place this file at the root of the repo, and it should be commited to the
        repo as well.
        The file name defaults to `.commit_help`.
        If this file is not presented, the functionality is totally ignored.
     */
    "commit_help_extra_file": ".commit_help",

    /*
        For each command specified, always include the command line flags
        indicated in the global_flags hash.
     */
    "global_flags": {
        // --no-columns is not supported in Git versions <1.7.11.  If Git is configured
        //   to use columns globally, --no-columns should be added here.
        // "branch": ["--no-columns"]
    },

    /*
        Set this to `true` to display remotes in the branch dashboard by default.
     */
    "show_remotes_in_branch_dashboard": false,

    /*
        Set this to `true` to display remotes in the tags dashboard by default.
     */
    "show_remotes_in_tags_dashboard": false,

    /*
        When set to `true`, GitSavvy will offer to set the upstream on `git: push`
        when tracking branch is not configured.
     */
    "prompt_for_tracking_branch": true,

    /*
        When set to `true`, GitSavvy will automatically display more info about the
        current commit in a quick panel.  When set to `false`, this function must
        be invoked manually.
     */
    "graph_show_more_commit_info": true,

    /*
        Update the desired graph arguments for a customized experience.
        Do not add "--all" in this setting, it is added in graph all branches

        NOTE: Changes you make may break in-view functionality, so use with caution.
     */
    // "git_graph_args": ["log", "--pretty=format:%h%d (%ar) by `%an` %s", "--graph"],
    "git_graph_args": ["log", "--oneline", "--graph", "--decorate"],

    /*
        When set to `true`, GitSavvy will prompt for confirmation when closing
        the commit message view.
    */
    "prompt_on_abort_commit": false,

    /*
        When set to `true`, GitSavvy will display git-flow integration commands.
    */
    "show_git_flow_commands": false,

    /*
        When set to `true`, GitSavvy will include the `--log` flag when performing
        merges.  This will mean commit summaries will be included in the merge commit
        message.
    */
    "merge_log": true,

    /*
        When set to `true`, GitSavvy will prompt for confirmation before actually
        performing a `git push --force` operation.
     */
    "confirm_force_push": true,

    /*
        When set to `true`, closing the commit message window will result in a commit
        action being taken, except in cases where the message is empty.  The same is
        also true for amending commits.
     */
    "commit_on_close": false,

    /*
        This encoding will be used whenever Git's output cannot be correctly parsed
        as UTF-8.  Modify this value if you regularly with files and Git history
        with a different text encoding.

        Example:
            "fallback_encoding": "gbk"
     */
    "fallback_encoding": "windows-1252",

    /*
        This setting should only be set to true in the following conditions:

          - you have installed the "Codecs33" package from Package Control
          - you are running Linux or OS X
          - you would like to use non-supported codecs like "gbk" for the
            `fallback_encoding` value
     */
    "load_additional_codecs": false,

    /*
        Set this value to true if you'd like GitSavvy to automatically attempt
        to decode using the `fallback_encoding` value, without prompting.
     */
    "silent_fallback": false,

    /*
        GitSavvy allows you to press `Tab` to cycle from one dashboard interface
        to the next.  This setting defines the order of that cycle.  The following
        are valid entries, and can be included in your preferred order:

            status
            branch
            rebase
            tags
            graph

     */
    "tab_order": [
        "status",
        "branch",
        "rebase",
        "tags",
        "graph"
    ],

    /*
        Set this value to a valid git reset mode (e.g. --hard, --soft) to skip
        reset mode prompt and always use that reset mode.
     */
    "use_reset_mode": null,

    /*
        By default, GitSavvy allows you attach arbitrary text meta-data to the
        branches that you track locally.  If, however, you experience performance
        problems because of this, feel free to turn this setting off, and the
        descriptions will not be displayed.
     */
    "enable_branch_descriptions": true,

    /*
        When set to `true`, GitSavvy will become Vintagoues friendly.
        You might need to restart Sublime in order to get this working.
     */
    "vintageous_friendly": false,

    /*
        When set to `true`, all the views will start in INSERT mode.
        Ignored if `vintageous_friendly` is `false`.
     */
    "vintageous_enter_insert_mode": false
}
